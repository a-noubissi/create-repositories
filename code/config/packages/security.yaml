# config/packages/security.yaml
security:
    enable_authenticator_manager: true

    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Afrikpay\SymfonySecurity\Entity\Account:
            algorithm: plaintext
            encode_as_base64: false
            iterations: 1

        Afrikpay\SymfonySecurity\Entity\Admin:
            algorithm: plaintext
            encode_as_base64: false
            iterations: 1

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # the name of your user provider can be anything
        app_account_provider:
            id: Afrikpay\SymfonySecurity\Provider\AccountProvider

        app_admin_provider:
            id: Afrikpay\SymfonySecurity\Provider\AdminProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Get authorization token by mobile applications with json auth
        #json_login:
        #    pattern: ^/app/login
        #    stateless: true
        #    provider: app_user_provider
        #    user_checker: App\Security\UserChecker
        #    custom_authenticators: [ app.login_authenticator ]
        #    json_login:
        #        check_path: /app/login
        #        username_path: username
        #        password_path: password
        #        success_handler: app.auth_success_handler
        #        failure_handler: app.auth_failure_handler

        # Authentication of partner applications
        partner:
            pattern: ^/api/secure/partner
            stateless: true
            provider: app_account_provider
            user_checker: Afrikpay\SymfonySecurity\Checker\AccountChecker
            custom_authenticators: [app.security_account_basic_authenticator]
            entry_point: app.security_account_basic_authenticator

        # Authentication of mobile and web applications
        admin:
            pattern: ^/api/secure/admin
            stateless: true
            provider: app_admin_provider
            user_checker: Afrikpay\SymfonySecurity\Checker\AdminChecker
            custom_authenticators: [app.security_admin_basic_authenticator]
            entry_point: app.security_admin_basic_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/doc, roles: PUBLIC_ACCESS }
        - { path: ^/api/unsecure/partner, roles: PUBLIC_ACCESS }
        - { path: ^/api/unsecure/admin, roles: PUBLIC_ACCESS }
        - { path: ^/api/secure/partner, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/secure/admin, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/$, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: plaintext
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon